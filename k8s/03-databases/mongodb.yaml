# k8s/03-databases/mongodb.yaml
# MongoDB StatefulSet v√† Service
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-hg-chatbot
  namespace: hg-chatbot
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
    name: mongodb
  clusterIP: None  # Headless service cho StatefulSet
  selector:
    app: mongodb

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: hg-chatbot
spec:
  serviceName: mongodb-hg-chatbot
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongodb/mongodb-community-server:7.0.11-ubuntu2204
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGODB_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: hg-chatbot-secrets
              key: MONGODB_INITDB_ROOT_USERNAME
        - name: MONGODB_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hg-chatbot-secrets
              key: MONGODB_INITDB_ROOT_PASSWORD
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2"
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-storage"
      resources:
        requests:
          storage: 20Gi